#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–ª—É—á—à–µ–Ω–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ GitSearch
"""

import os
import sys
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from src import reports

def test_improved_business_report():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É–ª—É—á—à–µ–Ω–Ω—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –±–∏–∑–Ω–µ—Å-–æ—Ç—á–µ—Ç–∞"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å-–æ—Ç—á–µ—Ç–∞...")
    
    try:
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π –±–∏–∑–Ω–µ—Å-–æ—Ç—á–µ—Ç –∑–∞ –≤–µ—Å—å –ø–µ—Ä–∏–æ–¥
        start_date = "2010-12-30"
        end_date = "2025-07-01"
        
        print(f"üìÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å-–æ—Ç—á–µ—Ç–∞: {start_date} - {end_date}")
        
        report_result = reports.generate_report(
            start_date=start_date,
            end_date=end_date,
            report_type="business"
        )
        
        print("‚úÖ –£–ª—É—á—à–µ–Ω–Ω—ã–π –±–∏–∑–Ω–µ—Å-–æ—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!")
        print(f"üìÅ –§–∞–π–ª: {report_result.get('path', '–Ω–µ —É–∫–∞–∑–∞–Ω')}")
        
        # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        print(f"üìä –í—Å–µ–≥–æ —É—Ç–µ—á–µ–∫: {report_result.get('total_leaks', 0)}")
        print(f"üè¢ –ö–æ–º–ø–∞–Ω–∏–π: {report_result.get('unique_companies', 0)}")
        print(f"‚ö° –°—Ä–µ–¥–Ω—è—è —Å–µ—Ä—å–µ–∑–Ω–æ—Å—Ç—å: {report_result.get('average_severity', 0):.2f}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å-–æ—Ç—á–µ—Ç–∞: {e}")
        return False

def test_improved_technical_report():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É–ª—É—á—à–µ–Ω–Ω—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç—á–µ—Ç–∞"""
    print("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç—á–µ—Ç–∞...")
    
    try:
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –æ—Ç—á–µ—Ç –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü
        start_date = "2025-06-01"
        end_date = "2025-07-01"
        
        print(f"üìÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç—á–µ—Ç–∞: {start_date} - {end_date}")
        
        report_result = reports.generate_report(
            start_date=start_date,
            end_date=end_date,
            report_type="technical"
        )
        
        print("‚úÖ –£–ª—É—á—à–µ–Ω–Ω—ã–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –æ—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!")
        print(f"üìÅ –§–∞–π–ª: {report_result.get('path', '–Ω–µ —É–∫–∞–∑–∞–Ω')}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç—á–µ—Ç–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ GitSearch")
    print("=" * 50)
    
    success_count = 0
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π –±–∏–∑–Ω–µ—Å-–æ—Ç—á–µ—Ç
    if test_improved_business_report():
        success_count += 1
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –æ—Ç—á–µ—Ç
    if test_improved_technical_report():
        success_count += 1
    
    print("\n" + "=" * 50)
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ: {success_count}/2 —Ç–µ—Å—Ç–æ–≤")
    print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    main()
